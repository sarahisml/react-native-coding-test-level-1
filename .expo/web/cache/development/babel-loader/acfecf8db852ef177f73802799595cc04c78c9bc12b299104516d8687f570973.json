{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar pokePath = \"https://pokeapi.co/api/v2/\";\nvar pokeQuery = \"pokemon?limit=10&offset=0\";\nvar firstGenPokemonPath = \"\" + pokePath + pokeQuery;\nexport default function App() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    firstGenPokemonDetails = _useState2[0],\n    setfirstGenPokemonDetails = _useState2[1];\n  useEffect(function () {\n    var fetchFirstGenPokemons = function fetchFirstGenPokemons() {\n      var firstGenPokemonIdsResponse, firstGenPokemonIdsBody, firstGenPokemonDetails;\n      return _regeneratorRuntime.async(function fetchFirstGenPokemons$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(fetch(firstGenPokemonPath));\n          case 2:\n            firstGenPokemonIdsResponse = _context2.sent;\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(firstGenPokemonIdsResponse.json());\n          case 5:\n            firstGenPokemonIdsBody = _context2.sent;\n            _context2.next = 8;\n            return _regeneratorRuntime.awrap(Promise.all(firstGenPokemonIdsBody.results.map(function _callee(p) {\n              var pDetails;\n              return _regeneratorRuntime.async(function _callee$(_context) {\n                while (1) switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return _regeneratorRuntime.awrap(fetch(p.url));\n                  case 2:\n                    pDetails = _context.sent;\n                    _context.next = 5;\n                    return _regeneratorRuntime.awrap(pDetails.json());\n                  case 5:\n                    return _context.abrupt(\"return\", _context.sent);\n                  case 6:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }, null, null, null, Promise);\n            })));\n          case 8:\n            firstGenPokemonDetails = _context2.sent;\n            setfirstGenPokemonDetails(firstGenPokemonDetails);\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, null, null, null, Promise);\n    };\n    fetchFirstGenPokemons();\n  }, []);\n  var renderPokemon = function renderPokemon(_ref) {\n    var item = _ref.item;\n    return _jsxs(View, {\n      style: styles.pokemonContainer,\n      children: [_jsx(Button, {\n        title: item.name.charAt(0).toUpperCase() + item.name.slice(1)\n      }), _jsx(Text, {\n        style: styles.pokemonTitle,\n        children: item.name.charAt(0).toUpperCase() + item.name.slice(1)\n      }), _jsx(Image, {\n        style: styles.pokemonSprite,\n        source: {\n          uri: item.sprites.front_default\n        }\n      })]\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"First Gen Pokemons\"\n    }), _jsx(FlatList, {\n      data: firstGenPokemonDetails,\n      renderItem: renderPokemon\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    marginTop: 60\n  },\n  title: {\n    fontSize: 38,\n    alignSelf: \"center\",\n    marginBottom: 20\n  },\n  pokemonContainer: {\n    backgroundColor: \"lightgrey\",\n    marginTop: 10\n  },\n  pokemonTitle: {\n    fontSize: 32,\n    alignSelf: \"center\",\n    marginTop: 10\n  },\n  pokemonSprite: {\n    width: 200,\n    height: 200,\n    alignSelf: \"center\"\n  }\n});","map":{"version":3,"names":["StatusBar","React","useState","useCallback","useEffect","useNavigation","pokePath","pokeQuery","firstGenPokemonPath","App","firstGenPokemonDetails","setfirstGenPokemonDetails","fetchFirstGenPokemons","fetch","firstGenPokemonIdsResponse","json","firstGenPokemonIdsBody","Promise","all","results","map","p","url","pDetails","renderPokemon","item","styles","pokemonContainer","name","charAt","toUpperCase","slice","pokemonTitle","pokemonSprite","uri","sprites","front_default","container","title","StyleSheet","create","flex","backgroundColor","marginTop","fontSize","alignSelf","marginBottom","width","height"],"sources":["C:/Users/sarah.anis.ismail/OneDrive - Accenture/Documents/React Native/react-native-coding-test-level-1/App.js"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport React, { useState, useCallback, useEffect } from \"react\";\r\nimport { StyleSheet, Text, View, FlatList, Image, Button } from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\n\r\nconst pokePath = \"https://pokeapi.co/api/v2/\";\r\nconst pokeQuery = \"pokemon?limit=10&offset=0\";\r\nconst firstGenPokemonPath = `${pokePath}${pokeQuery}`;\r\n\r\nexport default function App() {\r\n  const [firstGenPokemonDetails, setfirstGenPokemonDetails] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchFirstGenPokemons = async () => {\r\n      const firstGenPokemonIdsResponse = await fetch(firstGenPokemonPath);\r\n      const firstGenPokemonIdsBody = await firstGenPokemonIdsResponse.json();\r\n\r\n      const firstGenPokemonDetails = await Promise.all(\r\n        firstGenPokemonIdsBody.results.map(async (p) => {\r\n          const pDetails = await fetch(p.url);\r\n\r\n          return await pDetails.json();\r\n        })\r\n      );\r\n\r\n      setfirstGenPokemonDetails(firstGenPokemonDetails);\r\n    };\r\n\r\n    fetchFirstGenPokemons();\r\n  }, []);\r\n\r\n  const renderPokemon = ({ item }) => {\r\n    return (\r\n      <View style={styles.pokemonContainer}>\r\n        <Button\r\n          title={item.name.charAt(0).toUpperCase() + item.name.slice(1)}\r\n        ></Button>\r\n        <Text style={styles.pokemonTitle}>\r\n          {item.name.charAt(0).toUpperCase() + item.name.slice(1)}\r\n        </Text>\r\n        <Image\r\n          style={styles.pokemonSprite}\r\n          source={{\r\n            uri: item.sprites.front_default,\r\n          }}\r\n        />\r\n      </View>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>First Gen Pokemons</Text>\r\n      <FlatList data={firstGenPokemonDetails} renderItem={renderPokemon} />\r\n      <StatusBar style=\"auto\" />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    marginTop: 60,\r\n  },\r\n  title: {\r\n    fontSize: 38,\r\n    alignSelf: \"center\",\r\n    marginBottom: 20,\r\n  },\r\n  pokemonContainer: { backgroundColor: \"lightgrey\", marginTop: 10 },\r\n  pokemonTitle: {\r\n    fontSize: 32,\r\n    alignSelf: \"center\",\r\n    marginTop: 10,\r\n  },\r\n  pokemonSprite: {\r\n    width: 200,\r\n    height: 200,\r\n    alignSelf: \"center\",\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}